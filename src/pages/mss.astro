---
import PageLayout from "../layouts/page-layout.astro";
import TableHead from "../components/table-head.astro";
---

<PageLayout title="Manuscripts">
  <TableHead title="Manuscripts" />

  <script>
    import { TabulatorFull as Tabulator } from "tabulator-tables";
    import "tabulator-tables/dist/css/tabulator_semanticui.min.css";
    import {
      jsonpathLookup,
      jsonpathsDateRanges,
      jsonpathDistinctLookup,
      dateRangeFilter,
    } from "../lib/tabulator-utils.js";
    import { JSONPath } from "jsonpath-plus";
    import { withBasePath } from "../lib/withBasePath";

    import pass from "@data/passages.json";
    import mss from "@data/manuscripts.json";
    const manuscripts = Object.values(mss);
    const passages = Object.values(pass);

    // Add related passages to each manuscript
    const data = manuscripts.map((manuscript) => {
      const related_passages = passages
        .filter((passage) =>
          passage.manuscripts.some(
            (m) => m.value === manuscript.name[0]?.value,
          ),
        )
        .map((passage) => ({
          id: passage.id,
          passage: passage.passage,
        }));
      return {
        ...manuscript,
        related_passages, // Attach related_passages array
      };
    });
    console.log(data);

    var tabledata = [...data];

    var table = new Tabulator("#tabulator-table", {
      headerFilterLiveFilterDelay: 600,
      height: 900,
      data: tabledata,
      layout: "fitColumns",
      responsiveLayout: "collapse",
      rowHeader: {
        formatter: "responsiveCollapse",
        width: 30,
        minWidth: 30,
        hozAlign: "center",
        resizable: false,
        headerSort: false,
      },
      columns: [
        {
          title: "Settlement",
          resizable: true,
          field: "library",
          width: 150,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].place[*].name",
            separator: "; ",
          },
          headerFilter: "input",
        },
        {
          title: "Shelfmark",
          resizable: true,
          field: "name",
          minWidth: 200,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].value",
            separator: "; ",
          },
          headerFilter: "input",
        },
        {
          title: "Passages",
          field: "related_passages",
          minWidth: 300,
          mutator: (value) => {
            // Apply JSONPath to extract 'passage' and 'id' fields
            const passages = JSONPath({
              path: "$[*]",
              json: value,
            });

            // Flatten and format the extracted data
            return passages
              .flatMap((p: any) => {
                const passage = p.passage ? p.passage.substring(0, 50) : ""; // Truncate passage
                const id = p.id || ""; // Get ID
                const formattedPassage =
                  (id ? ` (${id}) ` : "") +
                  (passage
                    ? `${passage}${p.passage.length > 50 ? "..." : ""}`
                    : ""); // Combine passage and ID
                return formattedPassage;
              })
              .join("\n");
          },
          formatter: "textarea",
          headerFilter: "input",
        },

        {
          title: "Institutional context",
          resizable: true,
          field: "institutional_context",
          minWidth: 200,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].name",
            separator: "; ",
          },
          headerFilter: "input",
        },
        {
          title: "Date",
          resizable: true,
          field: "date_written",
          minWidth: 200,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].value",
            separator: "; ",
          },
          headerFilter: "input",
        },
      ],
    });

    //trigger download of data.csv file
    document
      .getElementById("download-csv")!
      .addEventListener("click", function () {
        table.download("csv", "data.csv");
      });

    //trigger download of data.json file
    document
      .getElementById("download-json")!
      .addEventListener("click", function () {
        table.download("json", "data.json");
      });

    //trigger download of data.html file
    document
      .getElementById("download-html")!
      .addEventListener("click", function () {
        table.download("html", "data.html", { style: true });
      });

    // event listeners set:
    // href to the entry detail view page
    table.on("rowClick", function (e, row) {
      var data = row.getData();
      var url = withBasePath(`/manuscripts/${data["jad_id"]}`);
      window.open(url, "_self");
    });
    table.on("dataLoaded", function (data) {
      var el = document.getElementById("counter1");
      if (el) {
        el.innerHTML = `${data.length}`;
      }
      var el = document.getElementById("counter2");
      if (el) {
        el.innerHTML = `${data.length}`;
      }
    });

    table.on("dataFiltered", function (filters, data) {
      var el = document.getElementById("counter1");
      if (el) {
        el.innerHTML = `${data.length}`;
      }
    });
  </script>
</PageLayout>
