---
import PageLayout from "@/layouts/page-layout.astro";
import Article from "@/components/article.astro";
import works from "@/content/data/works.json";
import NavLink from "@/components/nav-link.astro";

export async function getStaticPaths() {
    const paths = Object.values(works).map((work) => ({
        params: { id: work.jad_id },
        props: { data: work },
    }));
    return paths;
}
const { data: work } = Astro.props;

---

<PageLayout title={work.title}>
    <Article
        prevLink={`/works/${work.prev.id}`}
        nextLink={`/works/${work.next.id}`}
        mainTitle={work.author.length > 0
            ? work.author.map((item) => item.name).join(", ") +
              ": " +
              work.title
            : work?.title}
    >
    <div class="flex justify-end m-2">               
                <NavLink href=`/tei/works/${work.jad_id}.xml` 
                class="border border-brand-800 rounded-md py-2 px-4 bg-brand-600 text-brand-100 hover:bg-brand-100 hover:text-brand-800 transition"
                id="download-tei">TEI</NavLink>             
                
             </div>
        <dl class="grid grid-cols-[1fr_5fr] text-sm md:leading-7 md:text-base">
            <dt class="font-semibold text-brand-900 border-r border-neutral-300 pr-5">Author:</dt>
            <dd class="pl-5">
                {
                    work.author && work.author.length > 0 ? (
                        <NavLink href={`/authors/${work.author[0].jad_id}`}>
                            {work.author[0]?.name}
                            {work.author_certainty === false && " (?)"}
                        </NavLink>
                    ) : (
                        "N/A"
                    )
                }
            </dd>
            {
                work.incipit !== null && (
                    <>
                        <dt class="font-semibold text-brand-900 border-r border-neutral-300 pr-5">
                            Incipit:
                        </dt>
                        <dd class="pl-5">{work.incipit}</dd>
                    </>
                )
            }

            <dt class="font-semibold text-brand-900 border-r border-neutral-300 pr-5">
                Manuscripts:
            </dt>
            <dd class="pl-5">
                {
                    work.manuscripts.length > 0
                        ? work.manuscripts.map((ms,index,) => (
                                  <>
                                      <NavLink
                                          href={`/manuscripts/jad_manuscript__${ms.id}`}
                                      >
                                          {ms.name}
                                      </NavLink>
                                      {index < work.manuscripts.length - 1 &&
                                          "| "}
                                  </>
                              ),
                          )
                        : "N/A"
                }
            </dd>

            <dt class="font-semibold text-brand-900 border-r border-neutral-300 pr-5">Genre:</dt>
            <dd class="pl-5">
                {work.genre ? work.genre : "N/A"}
            </dd>

            <dt class="font-semibold text-brand-900 border-r border-neutral-300 pr-5">
                Edition:
            </dt>
            <dd class="pl-5">
                {
                    work.published_edition.length > 0
                        ? work.published_edition.map((ed, index) => (
                              <>
                                  {ed.digi_url !== null ? (
                                      <NavLink href={ed.digi_url}>
                                          {ed.name}
                                      </NavLink>
                                  ) : (
                                      ed.name
                                  )}
                                  {index < work.published_edition.length - 1 &&
                                      "| "}
                              </>
                          ))
                        : "N/A"
                }
            </dd>
            
            {
                work.institutional_context.length > 0 &&
            ( <dt class="font-semibold text-brand-900 border-r border-neutral-300 pr-5">
            Institutional context:
            </dt>
            <dd class="pl-5">

                    {work.institutional_context.map(
                        (
                            institution: {
                                jad_id: string;
                                name: string;
                            },
                            index: number,
                        ) => (
                            <>
                                <NavLink
                                    href={`/institutions/${institution.jad_id}`}
                                >
                                    {institution.name}
                                </NavLink>
                                {index <
                                    work.institutional_context.length -
                                        1 && "| "}
                            </>
                        ),
                    )}

            </dd>)
            }
            <dt class="font-semibold text-brand-900 border-r border-neutral-300 pr-5">Date:</dt>
            <dd class="pl-5">
                {
                    work.date.length > 0
                        ? work.date
                              .map((singleDate) => singleDate.value)
                              .join(", ")
                        : "N/A"
                }
                {
                    work.date.length > 0 &&
                        work.date_certainty === false &&
                        " (?)"
                }
            </dd>
            <dt class="font-semibold text-brand-900 border-r border-neutral-300 pr-5">
                Passages:
            </dt>
            <dd class="pl-5">
                {work.related__passages.length > 0 ? (
                    <ul>
                    {work.related__passages.map(rel_passages => (
                        <li class="mb-4">
                        <span class="font-semibold text-brand-900">{rel_passages.position_in_work}</span>
                        <ul class="ml-5 list-disc">
                          {rel_passages.passages
                            .sort((a, b) => {
                                const pageA = a.page ? parseInt(a.page) : Infinity;
                                const pageB = b.page ? parseInt(b.page) : Infinity;
                                return pageA - pageB;
                                })
                          .map((passage) => (
                            <li class="mb-2">
                                <NavLink href={`/passages/${passage.jad_id}`}>
                                    #{passage.jad_id.substring(16)}
                                    <span class="italic">
                                        {passage.passage}
                                    </span>
                                    { passage.page && (
                                        <span class="text-xs">
                                            (p. {passage.page})
                                        </span>
                                    )}
                                </NavLink>
                                <span class="text-xs">
                                    Source:
                                    {passage.occurrence_found_in.length > 0 ? ` ${passage.occurrence_found_in}` : " N/A"}
                                </span>
                            </li>
                          ))}
                        </ul>
                        </li>
                    ))}
                    </ul>
                            
                ) : 
                    "N/A"
                }
            </dd>
        </dl>
    </Article>
</PageLayout>
