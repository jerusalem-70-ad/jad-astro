---
import PageLayout from "../../layouts/page-layout.astro";
import { Icon } from "astro-icon/components";
// Read and parse the JSON file using import
import works from "../../content/data/works.json";
import NavLink from "@components/nav-link.astro";
export async function getStaticPaths() {
  
  // Map over the values in the object and create an array of paths
  const paths = Object.values(works).map((work) => ({
    params: { id: work.jad_id.toString() },  // Make sure id is a string
    props: { data: work }
  }));

  // Return the array of paths
  return paths;
}
       
const { data: work } = Astro.props;

---
<PageLayout>  
   
    <div>
        <div class="border-2 rounded-sm border-brandBrown bg-brandRose my-10 grid p-5 w-3/4 mx-auto">
            <h1 class="text-xl py-3 mx-auto font-medium">({work.id}) <span class="italic">{work.title}</span></h1>
            <dl class="grid grid-cols-[1fr_5fr] text-sm md:leading-7 md:text-base">  
                
                <dt class="font-semibold border-r border-gray-300 pr-5">Author:</dt>
                <dd class="pl-5">
                    {work.author && work.author.length > 0
                    ? <NavLink href={`/authors/${work.author[0].jad_id}`} class="hover:text-brandRed">{work.author[0]?.name}</NavLink>
                    : 'N/A'}
                </dd>
                
                <dt class="font-semibold border-r border-gray-300 pr-5">Manuscripts:</dt>                
                <dd class="pl-5">
                    { work.manuscripts.length > 0
                            ? work.manuscripts.map((ms: { id: number; value: any;}, index: number) => (
                                <>
                                <NavLink href={`/manuscripts/jad_manuscript__${ms.id}`} class="hover:text-brandRed">
                                    {ms.value}
                                </NavLink>
                                {/* to get comma after each entry BUT the last one (Index increments with each iteration, at the end it is equals to the length of the array -1) */}
                                {index < work.manuscripts.length - 1 && '| '}
                                </>
                            )) : 'N/A'
                        }
                </dd>
                    
                <dt class="font-semibold border-r border-gray-300 pr-5">Genre:</dt>                        
                <dd class="pl-5">
                    {work.genre && work.genre.value.length > 0
                    ? work.genre?.value
                    : 'N/A'}
                </dd>
                
                <dt class="font-semibold border-r border-gray-300 pr-5">Edition:</dt>                        
                <dd class="pl-5">
                    { work.published_edition.length > 0
                            ? work.published_edition.map((ed: { name: string; digi_url: any;}, index: number) => (
                                <>
                                {ed.digi_url.length > 0
                                ? <NavLink href={ed.digi_url} class="hover:text-brandRed">
                                    {ed.name}
                                </NavLink>
                                : ed.name
                                }
                               
                                {/* to get comma after each entry BUT the last one (Index increments with each iteration, at the end it is equals to the length of the array -1) */}
                                {index < work.published_edition.length - 1 && '| '}
                                </>
                            )) : 'N/A'
                        }
                </dd>
                
                <dt class="font-semibold border-r border-gray-300 pr-5">Institutional context:</dt>                        
                <dd class="pl-5">
                    {work.institutional_context.length > 0
                    ? work.institutional_context.map((institution : { name : string;}, index: number) => (
                        <>
                         <NavLink href="/" class="hover:text-brandRed">
                                    {institution.name}
                                </NavLink>
                        {index < work.institutional_context.length -1 && '| '}
                        </>
                    )) : 'N/A'
                }
                    
                </dd>
               
                
                <dt class="font-semibold border-r border-gray-300 pr-5">Date:</dt> 
                <dd class="pl-5">
                    { work.written_date.length > 0 
                    ? work.written_date 
                    : 'N/A' } 
                </dd>
                <dt class="font-semibold border-r border-gray-300 pr-5">Passages:</dt>
                <dd class="pl-5">
                    { work.related__passages.length > 0
                            ? work.related__passages.map((passage, index: number) => (
                                <>
                                <NavLink href={`/passages/${passage.jad_id}`} class="hover:text-brandRed">
                                    #{passage.jad_id.substring(15)}
                                </NavLink>
                                {/* to get comma after each entry BUT the last one (Index increments with each iteration, at the end it is equals to the length of the array -1) */}
                                {index < work.related__passages.length - 1 && '| '}
                                </>
                            )) : 'N/A'
                        }
                </dd>
            </dl> 
                
        </div>     
        <div class="my-10 flex p-5 w-3/4 mx-auto justify-between">
            {work.id > 1
            ? 
            <NavLink href=`/works/jad_work__${parseInt(work.jad_id.split('__')[1]) -1}`>
                <Icon name="lucide:circle-arrow-left" class="size-20"></Icon>
                </NavLink>
            : ''
        }
            
            <NavLink href=`/works/jad_work__${parseInt(work.jad_id.split('__')[1]) +1}`>
                <Icon name="lucide:circle-arrow-right" class="size-20"></Icon>
            </NavLink>
           
              
        </div>   
        
    </div>

</PageLayout>
  