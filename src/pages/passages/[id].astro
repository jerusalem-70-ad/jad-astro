---
import PageLayout from "@/layouts/page-layout.astro";
import passages from "@/content/data/passages.json";
import { Icon } from "astro-icon/components";
import NavLink from "@/components/nav-link.astro";
import Article from "@/components/article.astro";
import msOccurences from "@/content/data/ms_occurrences.json";
import mss from "@/content/data/manuscripts.json";
import biblRef from "@/content/data/biblical_references.json";
import "instantsearch.css/themes/satellite.css";
import PassageNetwork from "@/components/passage-network.astro";
import type { Passage } from "@/types";

export async function getStaticPaths() {
  const paths = Object.values(passages).map((passage) => ({
    params: { id: passage.jad_id.toString() },
    props: { data: passage as Passage },
  }));
  return paths;
}

const { data: passage } = Astro.props;

// extract the sources for the current passage
const source = Object.values(passages).filter(
  (item) => item.id === passage.source_passage[0]?.id
);

// passage as source (look where one passage is used as source for another)
const usedBy = Object.values(passages).filter((item) =>
  item.source_passage.some((source) => source.id === passage.id)
);

// use ms_occurences.json to look for the manuscripts and their loci
const msLocus = Object.values(msOccurences).filter(
  (item) => item.occurrence[0]?.id === passage.id
);

// filter the manuscripts that are used in the current passage
// to get information about the manuscripts (jad_id)
const mssSource = Object.values(mss).filter((ms) =>
  passage.manuscripts.some((man) => man.value === ms.name[0]?.value)
);

// combine the locus information to the manuscript
const mssSourceLocus = mssSource.map((msSource) => {
  const locus = msLocus.filter(
    (locus) => locus.manuscript[0]?.value === msSource.name[0].value
  );
  return {
    ...msSource,
    locus, // Add a new property 'locus' containing the matching locus array
  };
});
// filter the biblical references that are used in the current passage
const biblRefSource = Object.values(biblRef).filter((ref) =>
  passage.biblical_references.some((bibl) => bibl.id === ref.id)
);
---

<PageLayout title=`passage #${passage.id.toString()}`>
  <div class="md:grid md:grid-cols-[1fr_4fr] md:gap-2 items-start h-full">
    <aside
      class="hidden md:block border-r border-neutral-400 min-h-full overflow-y-auto bg-white"
    >
      <div id="searchbox" class="py-3 px-4"></div>
      <section>
        <div id="hits" class="px-4"></div>
      </section>
    </aside>

    <Article
      prevLink={`/passages/${passage.prev.id}`}
      nextLink={`/passages/${passage.next.id}`}
      mainTitle=`Passage #${passage.id}: ${passage.passage} `
    >
      <dl class="grid grid-cols-[1fr_5fr] text-sm md:text-base md:leading-7">
        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Author:
        </dt>
        <dd class="pl-5">
          {
            passage.work.length > 0 && passage.work[0].author.length > 0 ? (
              <NavLink href={`/authors/${passage.work[0].author[0].jad_id}`}>
                {passage.work[0].author[0]?.name}{" "}
                {passage.work[0].author_certainty === false && " (?)"}
              </NavLink>
            ) : (
              "N/A"
            )
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Work:
        </dt>
        <dd class="pl-5">
          {
            passage.work.length > 0
              ? passage.work.map((werk, index) => (
                  <>
                    <NavLink href={`/works/${werk.jad_id}`}>
                      {werk.name}
                    </NavLink>
                    {index < passage.work.length - 1 && ", "}
                  </>
                ))
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Position in work
        </dt>

        <dd class="pl-5">
          {passage.position_in_work || "N/A"}
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Manuscripts:
        </dt>
        <dd class="pl-5">
          {
            passage.manuscripts.length > 0 ? (
              <ul>
                {mssSourceLocus.map((ms) => (
                  <li>
                    <NavLink href={`/manuscripts/${ms.jad_id}`}>
                      {ms.view_label}
                    </NavLink>
                    {/* add exact position preprocessed from json ms_occurences */}
                    {ms.locus?.length > 0 &&
                      ms.locus
                        .filter((locus) => locus.position_in_ms)
                        .map((locus) => (
                          <span>
                            (f. {locus.position_in_ms})
                            {locus.facsimile_position && (
                              <NavLink href={locus.facsimile_position}>
                                Facsimile{" "}
                                <Icon
                                  name="lucide:external-link"
                                  class="size-4 inline-flex"
                                />
                              </NavLink>
                            )}
                          </span>
                        ))}
                  </li>
                ))}
              </ul>
            ) : (
              "N/A"
            )
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Biblical references:
        </dt>
        <dd class="pl-5 flex">
          {
            biblRefSource.length > 0
              ? biblRefSource
                  .map((reference, index) => (
                    <span class="group relative">
                      {reference.nova_vulgata_url ? (
                        <NavLink
                          href={reference.nova_vulgata_url}
                          class="flex underline underline-offset-4 decoration-dotted"
                        >
                          {reference.name}
                          <Icon
                            name="lucide:external-link"
                            class="size-4 text-brand-800 inline-flex"
                          />
                        </NavLink>
                      ) : (
                        <span>{reference.name}</span>
                      )}

                      <span class="italic invisible group-hover:visible absolute z-10 w-[300px] top-8 left-0 border-brand-700 border text-brand-900 bg-brand-50 opacity-95 p-2 rounded-sm shadow-sm text-sm">
                        {reference.text}
                      </span>
                    </span>
                  ))
                  // use reduce to add the space and separator between entries
                  .reduce((prev, curr, idx) =>
                    idx === 0
                      ? [curr]
                      : [prev, <span class="mx-1">|</span>, curr]
                  )
              : "N/A"
          }
        </dd>
        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
        </dt>
        <dd class="pl-5 text-brand-600">
          {
            passage.ai_bibl_ref?.length > 0
              ? passage.ai_bibl_ref
                  .map((reference) => reference.value)
                  .join(", ")
              : "N/A"
          }
        </dd>
        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Liturgical references:
        </dt>
        <dd class="pl-5">
          {
            passage.liturgical_references.length > 0
              ? passage.liturgical_references
                  .map((reference) => reference.value)
                  .join(", ")
              : "N/A"
          }
        </dd>
       
       
        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Sources:
        </dt>
        <dd class="pl-5">
          {
            passage.source_passage.length > 0
              ? source.map((source) => (
                  <span>
                    {source.work?.[0]?.author?.length > 0 ? (
                      <span>
                        {source.work[0].author[0].name} -{" "}
                        <span class="italic">{source.work[0].name}</span>
                      </span>
                    ) : (
                      <span class="italic">{source.work[0].name}</span>
                    )}
                    <Icon
                      name="lucide:arrow-right"
                      class="size-4 text-brand-800 inline-flex"
                    />
                    <NavLink href={`/passages/${source.jad_id}`}>
                      ({source.id}) {source.passage}
                    </NavLink>
                  </span>
                ))
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Used by:
        </dt>
        <dd class="pl-5">
          {
            usedBy.length > 0 ? (
              <ul class="list-disc list-inside">
                {usedBy.map((passage) => (
                  <li class="">
                    {passage.work?.[0].author.length > 0 ? (
                      <span>
                        {passage.work[0].author[0].name} -{" "}
                        <span class="italic">{passage.work[0].name}</span>
                      </span>
                    ) : (
                      <span class="italic">{passage.work[0].name}</span>
                    )}
                    <Icon
                      name="lucide:arrow-right"
                      class="size-4 text-brand-800 inline-flex"
                    />
                    <NavLink href={`/passages/${passage.jad_id}`}>
                      ({passage.id}) {passage.passage}
                    </NavLink>
                  </li>
                ))}
              </ul>
            ) : (
              "N/A"
            )
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Cluster:
        </dt>
        <dd class="pl-5">
          {
            passage.part_of_cluster?.length > 0
              ? passage.part_of_cluster
                  .map((cluster) => cluster.value)
                  .join(", ")
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Keywords:
        </dt>
        <dd class="pl-5">
          {
            passage.keywords?.length > 0
              ? passage.keywords
                  .map((keyword) => (
                    <NavLink href={`/keywords/jad_keyword__${keyword.id}`}>
                      {keyword.name}
                    </NavLink>
                  ))
                  .reduce((prev, curr, idx) =>
                    idx === 0 ? [curr] : [prev, ", ", curr]
                  )
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Full text:
        </dt>
        <dd class="pl-5 italic">
          {passage.text_paragraph || "N/A"}
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Passage found in:
        </dt>
        <dd class="pl-5">
          {
            passage.occurrence_found_in?.length > 0
              ? passage.occurrence_found_in.map((find) => find.value).join(", ")
              : "N/A"
          }
          {passage.note && <span>: {passage.note}</span>}
        </dd>
        {passage.source_passage.length > 0 || usedBy.length > 0 ? (
          <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Transmission:
        </dt>
        <dd class="pl-5">
          {
            passage.transmission_graph ? (
            <details>
            <summary class="cursor-pointer p-2 border border-neutral-200 bg-brand-50 hover:bg-brand-700 hover:text-brand-50 w-80 rounded-md">See visualization graph</summary>
            <div>
              <p class="text-sm text-brand-600">
                The transmission graph shows the relationships between this passage
                and its sources, as well as the passages that use it as a source.
              </p>
                <PassageNetwork transmissionGraph={passage.transmission_graph} />
            </div></details>
            ) : (
              <p>No transmission data available for this passage.</p>
            )
          }
        </dd>
        )
        : ''}
      </dl>
    </Article>
  </div>
</PageLayout>

<script src="@/lib/advanced-search-aside.js"></script>
