---
import PageLayout from "@/layouts/page-layout.astro";
import passages from "@/content/data/passages.json";
import { Icon } from "astro-icon/components";
import NavLink from "@/components/nav-link.astro";
import Article from "@/components/article.astro";
import "instantsearch.css/themes/satellite.css";
import type { Passage } from "@/types";
import ChronologicalTree from "@/components/chronological-tree.astro";
import {addItalics} from "@/lib/utils.js";

export async function getStaticPaths() {
  const paths = Object.values(passages).map((passage) => ({
    params: { id: passage.jad_id.toString() },
    props: { data: passage as Passage },
  }));
  return paths;
}

const { data: passage } = Astro.props;


// passage as source (look where one passage is used as source for another)
const usedBy = Object.values(passages).filter((item) =>
  item.source_passage.some((source) => source.id === passage.id)
);
---

<PageLayout title=`passage #${passage.id.toString()}`>
  <div
    class="grid grid-cols-1 md:grid-cols-[1fr_4fr] md:gap-2 items-start h-full"
  >
    <aside
      class="hidden md:block border-r border-neutral-400 min-h-full overflow-y-auto bg-white"
    >
      <div id="searchbox" class="py-3 px-4"></div>
      <section>
        <div id="hits" class="px-4"></div>
      </section>
    </aside>

    <Article
      prevLink={`/passages/${passage.prev.id}`}
      nextLink={`/passages/${passage.next.id}`}
      mainTitle=`Passage #${passage.id}: ${passage.passage} `
    >
    <div class="grid gap-4">
      <dl
        class="grid grid-cols-[1fr_5fr] text-sm md:text-base md:leading-5 border border-neutral-300"
      >
        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 p-2 bg-brand-50"
        >
          Author:
        </dt>
        <dd class="pl-5 p-2 bg-brand-50">
          {
            passage.work.length > 0 && passage.work[0].author.length > 0 ? (
              <NavLink href={`/authors/${passage.work[0].author[0].jad_id}`}>
                {passage.work[0].author[0]?.name}{" "}
                {passage.work[0].author_certainty === false && " (?)"}
              </NavLink>
            ) : (
              "N/A"
            )
          }
        </dd>
        <dt
            class="font-semibold text-brand-800 border-r border-neutral-300 p-2"
          >
            Work:
          </dt>
          <dd class="pl-5 p-2">
            {
              passage.work.length > 0
                ? passage.work.map((werk, index) => (
                    <>
                      <NavLink href={`/works/${werk.jad_id}`}>
                        {werk.title}
                      </NavLink>
                      {index < passage.work.length - 1 && ", "}
                    </>
                  ))
                : "N/A"
            }
          </dd>
          <dt
            class="font-semibold text-brand-800 border-r border-neutral-300 p-2 bg-brand-50"
          >
            Position in work
          </dt>
          <dd class="pl-5 p-2 bg-brand-50">
            {passage.position_in_work || "N/A"}
          </dd>
          <dt
            class="font-semibold text-brand-800 border-r border-neutral-300 p-2"
          >
            Manuscripts:
          </dt>
          <dd class="pl-5 p-2">
            {passage.mss_occurrences &&
              passage.mss_occurrences?.length > 0 ? (
                <ul>
                  {passage.mss_occurrences.map((ms) => (
                    <li class={ms.main_ms ? "font-semibold" : ""}>
                      <NavLink href={`/manuscripts/${ms.manuscript_jad_id}`}>
                        {ms.manuscript}
                        </NavLink>
                      {/* add exact position preprocessed from json ms_occurences */}
                      {ms.position_in_ms &&
        
                            <span>
                              (f. {ms.position_in_ms})
                              {ms.facsimile_position && (
                                <NavLink href={ms.facsimile_position}>
                                  Facsimile{" "}
                                  <Icon
                                    name="lucide:external-link"
                                    class="size-4 inline-flex"
                                  />
                                </NavLink>
                              )}
                            </span>
                          }
                    </li>
                  ))}
                </ul>
              ) : (
                "N/A"
              )
            }
          </dd>
          <dt
            class="font-semibold text-brand-800 border-r border-neutral-300 p-2 bg-brand-50"
          >
            Biblical references:
          </dt>
          <dd class="pl-5 p-2 bg-brand-50 ">
             {
              passage.biblical_references.length > 0
                ? <ul class="sm:flex sm:flex-wrap sm:gap-2">
                    {/* map through biblical_references and create a span for each reference */}
                  {passage.biblical_references
                  .sort((a, b) => a.key - b.key)
                    .map((reference) => (
                      <li class="group relative">
                        {/* if reference.nova_vulgata_url is defined, use NavLink, otherwise just span */}
                        {reference.nova_vulgata_url ? (
                          <NavLink
                            href={reference.nova_vulgata_url}
                            class="flex underline underline-offset-4 decoration-dotted"
                          >
                            {reference.value}
                            <Icon
                              name="lucide:external-link"
                              class="size-4 text-brand-800 inline-flex"
                            />
                          </NavLink>
                        ) : (
                          <span>{reference.value}</span>
                        )}
                       <span class="hidden sm:block italic invisible group-hover:visible absolute z-10 w-[300px] top-8 left-0 border-brand-700 border text-brand-900 bg-brand-50 opacity-95 p-2 rounded-sm shadow-sm text-sm">
                          {reference.text}
                        </span>
                      </li>
                    ))
                    .reduce((prev, curr, idx) =>
                    idx === 0
                      ? [curr]
                      : [prev, <span class="hidden sm:block mx-1">|</span>, curr]
                  )}
                </ul>
                : "N/A"
            }
          </dd>
         
          <dt
            class="font-semibold text-brand-800 border-r border-neutral-300 p-2"
          >
            Liturgical references:
          </dt>
          <dd class="pl-5 p-2">
            {
              passage.liturgical_references.length > 0
                ? passage.liturgical_references
                    .map((reference) => reference.value)
                    .join(", ")
                : "N/A"
            }
          </dd>
          
      </dl>
        
          <dl class="grid grid-cols-[1fr_5fr] text-sm md:text-base md:leading-5 border border-neutral-300">
            <dt
              class="font-semibold text-brand-800 border-r border-neutral-300 p-2 bg-brand-50"
            >
              Sources:
            </dt>
            <dd class="pl-5 p-2  bg-brand-50">
              
                {
                  passage.source_passage.length > 0 ? (<ul class="list-disc list-inside">
                    {passage.source_passage.slice(0, 4).map((source) => (
                        <li>
                          {source.author ? (
                            <span>
                              {source.author} -{" "}
                              <span class="italic">{source.title}</span>
                            </span>
                          ) : (
                            <span class="italic">{source.title}</span>
                          )}
                          <Icon
                            name="lucide:arrow-right"
                            class="size-4 text-brand-800 inline-flex"
                          />
                          <NavLink href={`/passages/${source.jad_id}`}>
                            ({source.id}) {source.passage}
                          </NavLink>
                        </li>
                      ))}

                      {/* //hidden extra items */}
                      {passage.source_passage.slice(4).map((source) => (
                        <li class="hidden extra-item">
                          {source.author ? (
                            <span>
                              {source.author} -{" "}
                              <span class="italic">{source.title}</span>
                            </span>
                          ) : (
                            <span class="italic">{source.title}</span>
                          )}
                          <Icon
                            name="lucide:arrow-right"
                            class="size-4 text-brand-800 inline-flex"
                          />
                          <NavLink href={`/passages/${source.jad_id}`}>
                            ({source.id}) {source.passage}
                          </NavLink>
                        </li>))}

              </ul>) : "N/A"
                }
                 {passage.source_passage.length > 4 && (
    <button id="toggleUsedBy" class="text-brand-800 underline mt-2 cursor-pointer">
      Show more
    </button>
  )}
            </dd>
            <dt class="font-semibold text-brand-800 border-r border-neutral-300 p-2">
  Used by:
</dt>
<dd class="pl-5 p-2">
  {
    usedBy.length > 0 ? (
      <ul class="list-disc list-inside" id="usedByList">
        {usedBy.slice(0, 4).map((passage) => (
          <li>
            {passage.work?.[0].author.length > 0 ? (
              <span>
                {passage.work[0].author[0].name} -{" "}
                <span class="italic">{passage.work[0].title}</span>
              </span>
            ) : (
              <span class="italic">{passage.work[0].title}</span>
            )}
            <Icon
              name="lucide:arrow-right"
              class="size-4 text-brand-800 inline-flex"
            />
            <NavLink href={`/passages/${passage.jad_id}`}>
              ({passage.id}) {passage.passage}
            </NavLink>
          </li>
        ))}

        {/* hidden extra items */}
        {usedBy.slice(4).map((passage) => (
          <li class="hidden extra-item">
            {passage.work?.[0].author.length > 0 ? (
              <span>
                {passage.work[0].author[0].name} -{" "}
                <span class="italic">{passage.work[0].title}</span>
              </span>
            ) : (
              <span class="italic">{passage.work[0].title}</span>
            )}
            <Icon
              name="lucide:arrow-right"
              class="size-4 text-brand-800 inline-flex"
            />
            <NavLink href={`/passages/${passage.jad_id}`}>
              ({passage.id}) {passage.passage}
            </NavLink>
          </li>
        ))}
      </ul>
    ) : (
      "N/A"
    )
  }
<!-- button for showing extra items -->
  {usedBy.length > 4 && (
    <button id="toggleUsedBy" class="text-brand-800 underline mt-2 cursor-pointer">
      Show more
    </button>
  )}
</dd>
              {passage.source_passage.length > 0 || usedBy.length > 0 ? (
            <dt
            class="hidden sm:block font-semibold text-brand-800 border-r border-neutral-300 p-2"
          >
            Transmission:
          </dt>
          <dd class="hidden sm:block pl-5 p-2">
            {passage.transmission_graph && (
              <details>
              <summary class="cursor-pointer p-2  bg-brand-800/90 hover:bg-brand-700 text-brand-50 w-60 rounded-md">See visualization graph</summary>
              <div>               
                  <ChronologicalTree
        transmissionGraph={passage.transmission_graph}/>
              </div></details>
              ) 
            }
          </dd>
          )
          : ''}
          </dl>
          <dl class="grid grid-cols-[1fr_5fr] text-sm md:text-base md:leading-5 border border-neutral-300">
          <dt
            class="font-semibold text-brand-800 border-r border-neutral-300 p-2 bg-brand-50"
          >
            Cluster:
          </dt>
          <dd class="pl-5 p-2 bg-brand-50">
            {
              passage.part_of_cluster?.length > 0
                ? passage.part_of_cluster
                    .map((cluster) => cluster.value)
                    .join(", ")
                : "N/A"
            }
          </dd>
          <dt
            class="font-semibold text-brand-800 border-r border-neutral-300 p-2"
          >
            Keywords:
          </dt>
          <dd class="pl-5 p-2">
            {
              passage.keywords?.length > 0
                ? passage.keywords
                    .map((keyword) => (
                      <NavLink href={`/keywords/jad_keyword__${keyword.id}`}>
                        {keyword.value}
                      </NavLink>
                    ))
                    .reduce((prev, curr, idx) =>
                      idx === 0 ? [curr] : [prev, ", ", curr]
                    )
                : "N/A"
            }
          </dd>
          <dt
            class="font-semibold text-brand-800 border-r border-neutral-300 p-2 bg-brand-50"
          >
            Passage found in:
          </dt>
          <dd class="pl-5 p-2 bg-brand-50">
            {
              passage.occurrence_found_in?.length > 0
                ? passage.occurrence_found_in.map((find) => find.value).join(", ")
                : "N/A"
            }
            {passage.note && (<span>: </span><span set:html={addItalics(passage.note)}></span>)}
            
          </dd>
          <dt
            class="font-semibold text-brand-800 border-r border-neutral-300 p-2"
          >
            Edition :
          </dt>
          <dd class="pl-5 p-2">
            {passage.work[0].edition}
           {passage?.edition_link && 
            <NavLink href={passage.edition_link}> Facsimile <Icon name="lucide:external-link" class="size-4 text-brand-800 inline-flex"/></NavLink>
            }
          </dd>
            <dt
            class="font-semibold text-brand-800 border-r border-neutral-300 p-2 bg-brand-50"
          >
            Full text:
          </dt>
          <dd class="pl-5 p-2 italic bg-brand-50">
            {passage.text_paragraph || "N/A"}
          </dd>
        
        </dl> 
      </div>
    </Article>
  </div>
</PageLayout>

<script src="@/lib/advanced-search-aside.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.getElementById("toggleUsedBy");
    if (!toggleBtn) return;

    toggleBtn.addEventListener("click", () => {
      const extraItems = document.querySelectorAll("#usedByList .extra-item");
      const isHidden = extraItems[0].classList.contains("hidden");

      extraItems.forEach(li => li.classList.toggle("hidden"));
      toggleBtn.textContent = isHidden ? "Show less" : "Show more";
    });
  });
</script>