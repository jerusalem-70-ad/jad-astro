---
import PageLayout from "@/layouts/page-layout.astro";
import passages from "@/content/data/passages.json";
import { Icon } from "astro-icon/components";
import NavLink from "@/components/nav-link.astro";
import Article from "@/components/article.astro";
import msOccurences from "@/content/data/ms_occurrences.json";
import mss from "@/content/data/manuscripts.json";
import "instantsearch.css/themes/satellite.css";

export async function getStaticPaths() {
  const paths = Object.values(passages).map((passage) => ({
    params: { id: passage.jad_id.toString() },
    props: { data: passage },
  }));
  return paths;
}

const { data: passage } = Astro.props;

// extract the sources for the current passage
const source = Object.values(passages).filter(
  (item) => item.id === passage.source_passage[0]?.id
);

// passage as source (look where one passage is used as source for another)
const usedBy = Object.values(passages).filter((item) =>
  item.source_passage.some((source) => source.id === passage.id)
);

// use ms_occurences.json to look for the manuscripts and their loci
const msLocus = Object.values(msOccurences).filter(
  (item) => item.occurrence[0]?.id === passage.id
);

// filter the manuscripts that are used in the current passage
// to get information about the manuscripts (jad_id)
const mssSource = Object.values(mss).filter((ms) =>
  passage.manuscripts.some((man) => man.value === ms.name[0]?.value)
);

// combine the locus information to the manuscript
const mssSourceLocus = mssSource.map((msSource) => {
  const locus = msLocus.filter(
    (locus) => locus.manuscript[0]?.value === msSource.name[0].value
  );
  return {
    ...msSource,
    locus, // Add a new property 'locus' containing the matching locus array
  };
});
---

<PageLayout title=`passage #${passage.id.toString()}`>
  <div class="md:grid md:grid-cols-[1fr_4fr] md:gap-2 items-start h-full">
    <aside
      class="hidden md:block border-r border-neutral-400 min-h-full overflow-y-auto bg-white"
    >
      <div id="searchbox" class="py-3 px-4"></div>
      <section>
        <div id="hits" class="px-4"></div>
      </section>
    </aside>

    <Article
      prevLink={`/passages/${passage.prev.id}`}
      nextLink={`/passages/${passage.next.id}`}
      mainTitle=`Passage #${passage.id}: ${passage.passage} `
    >
      <dl class="grid grid-cols-[1fr_5fr] text-sm md:text-base md:leading-7">
        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Author:
        </dt>
        <dd class="pl-5">
          {
            passage.work.length > 0 && passage.work[0].author.length > 0 ? (
              <NavLink href={`/authors/${passage.work[0].author[0].jad_id}`}>
                {passage.work[0].author[0]?.name}{" "}
                {passage.work[0].author_certainty === false && " (?)"}
              </NavLink>
            ) : (
              "N/A"
            )
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Work:
        </dt>
        <dd class="pl-5">
          {
            passage.work.length > 0
              ? passage.work.map(
                  (werk: { jad_id: string; title: any }, index: number) => (
                    <>
                      <NavLink href={`/works/${werk.jad_id}`}>
                        {werk.title}
                      </NavLink>
                      {index < passage.work.length - 1 && ", "}
                    </>
                  )
                )
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Position in work
        </dt>

        <dd class="pl-5">
          {
            passage.position_in_work.length > 0
              ? passage.position_in_work
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Manuscripts:
        </dt>
        <dd class="pl-5">
          {
            passage.manuscripts.length > 0 ? (
              <ul>
                {mssSourceLocus.map(
                  (ms: {
                    id: number;
                    view_label: string;
                    jad_id: string;
                    locus: {
                      position_in_ms: string;
                      facsimile_position: string;
                    }[];
                  }) => (
                    <li>
                      <NavLink href={`/manuscripts/${ms.jad_id}`}>
                        {ms.view_label}
                      </NavLink>
                      {/* add exact position preprocessed from json ms_occurences */}
                      {ms.locus.length > 0 &&
                        ms.locus
                          .filter((locus) => locus.position_in_ms)
                          .map((locus) => (
                            <span>
                              (f. {locus.position_in_ms})
                              {locus.facsimile_position && (
                                <NavLink href={locus.facsimile_position}>
                                  Facsimile{" "}
                                  <Icon
                                    name="lucide:external-link"
                                    class="size-4 inline-flex"
                                  />
                                </NavLink>
                              )}
                            </span>
                          ))}
                    </li>
                  )
                )}
              </ul>
            ) : (
              "N/A"
            )
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Biblical references:
        </dt>
        <dd class="pl-5">
          {
            passage.biblical_references.length > 0
              ? passage.biblical_references
                  .map((reference) => reference.value)
                  .join(", ")
              : "N/A"
          }
        </dd>
        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
        </dt>
        <dd class="pl-5">
          {
            passage.ai_bibl_ref.length > 0
              ? passage.ai_bibl_ref
                  .map((reference) => reference.value)
                  .join(", ")
              : "N/A"
          }
        </dd>
        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Liturgical references:
        </dt>
        <dd class="pl-5">
          {
            passage.liturgical_references.length > 0
              ? passage.liturgical_references
                  .map((reference) => reference.value)
                  .join(", ")
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Sources:
        </dt>
        <dd class="pl-5">
          {
            passage.source_passage.length > 0
              ? source.map((source) => (
                  <span>
                    {source.work?.[0]?.author?.length > 0
                      ? `${source.work[0].author[0].name} - ${source.work[0].name}`
                      : source.work?.[0]?.name}
                    <NavLink href={`/passages/${source.jad_id}`}>
                      ({source.id}) {source.passage}
                    </NavLink>
                  </span>
                ))
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Used by:
        </dt>
        <dd class="pl-5">
          {
            usedBy.length > 0
              ? usedBy.map((passage) => (
                  <span>
                    {passage.work?.[0].author.length > 0
                      ? `${passage.work[0].author[0].name} - ${passage.work[0].name}`
                      : passage.work[0].name}
                    <NavLink href={`/passages/${passage.jad_id}`}>
                      ({passage.id}) {passage.passage}
                    </NavLink>
                  </span>
                ))
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Cluster:
        </dt>
        <dd class="pl-5">
          {
            passage.part_of_cluster.length > 0
              ? passage.part_of_cluster
                  .map(
                    (cluster: { value: string; id: number }) => cluster.value
                  )
                  .join(", ")
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Keywords:
        </dt>
        <dd class="pl-5">
          {
            passage.keywords.length > 0
              ? passage.keywords
                  .map((keyword: { name: string; id: number }) => (
                    <NavLink href={`/keywords/jad_keyword__${keyword.id}`}>
                      {keyword.name}
                    </NavLink>
                  ))
                  .reduce((prev, curr) => [prev, ", ", curr])
              : "N/A"
          }
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Full text:
        </dt>
        <dd class="pl-5 italic">
          {passage.text_paragraph !== null ? passage.text_paragraph : "N/A"}
        </dd>

        <dt
          class="font-semibold text-brand-800 border-r border-neutral-300 pr-2"
        >
          Passage found in:
        </dt>
        <dd class="pl-5">
          {
            passage.occurrence_found_in.length > 0
              ? passage.occurrence_found_in
                  .map((find: { value: string }) => find.value)
                  .join(", ")
              : "N/A"
          }
          {passage.note && <span>: {passage.note}</span>}
        </dd>
      </dl>
    </Article>
  </div>
</PageLayout>

<script src="@/lib/advanced-search-aside.js"></script>
