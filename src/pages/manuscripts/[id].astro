---
import PageLayout from "../../layouts/page-layout.astro";
import manuscripts from "../../content/data/manuscripts.json";
import NavLink from "@components/nav-link.astro";

import { Icon } from "astro-icon/components";

export async function getStaticPaths() {
  // Use getCollection to read the collection of json files
  // const manuscripts = JSON.parse(readFileSync("src/content/data/manuscripts.json", {encoding: "utf-8"}))
  const paths = Object.values(manuscripts).map((manuscript) => ({
    params: { id: manuscript.jad_id.toString() },
    props: { data: manuscript },
  }));
  return paths;
}

const { data: manuscript } = Astro.props;
---

<PageLayout>
  <div>
    <article
      class="border-2 rounded-sm border-brandBrown bg-brandRose w-3/4 grid grid-cols-1 mx-auto p-5 my-10"
    >
      <h1 class="text-xl py-3 mx-auto">{manuscript.name[0]?.value}</h1>
      <dl class="grid grid-cols-[1fr_5fr] text-sm md:leading-7 md:text-base">
        <dt class="font-semibold border-r border-gray-300 pr-2">Settlement:</dt>
        <dd class="pl-5">{manuscript.library[0]?.place[0]?.name}</dd>

       {manuscript.library.length > 0 && (
         <dt class="font-semibold border-r border-gray-300 pr-2">
          Library / Collection:
        </dt>
        <dd class="pl-5">
          <NavLink
            href={manuscript.library[0]?.gnd_url}
            target="_blank"
            class="hover:text-brandRed flex"
          >
            {manuscript.library[0]?.name}<Icon name="lucide:external-link" />
          </NavLink>
        </dd>
       )}

        <dt class="font-semibold border-r border-gray-300 pr-2">Shelfmark:</dt>
        <dd class="pl-5">{manuscript?.idno}</dd>

       {manuscript.institutional_context.length > 0 && (
         <dt class="font-semibold border-r border-gray-300 pr-2">
          Insitutional context:
        </dt>
        <dd class="pl-5">
          <NavLink href={`/institutions/${manuscript.institutional_context[0]?.jad_id}`}
            class="hover:text-brandRed">
            {manuscript.institutional_context[0]?.name ?? "N/A"}
          </NavLink>
        </dd>
       )}

        
        {manuscript.related__passages.length > 0 && (
          <dt class="font-semibold border-r border-gray-300 pr-2">Passages:</dt>
        <dd class="pl-5"> 
          {manuscript.related__passages.map(
              (passage: { jad_id: string }, index: number) => (
                <>
                  <NavLink
                    href={`/passages/${passage.jad_id}`}
                    class="hover:text-brandRed"
                  >
                    #{passage.jad_id.substring(15)}
                  </NavLink>
                  {/* to get comma after each entry BUT the last one (Index increments with each iteration, at the end it is equals to the length of the array -1) */}
                  {index < manuscript.related__passages.length - 1 && ", "}
                </>
              ),
            )
          }
        </dd>
        )}
      </dl>
      <div class="flex flex-col gap-2 py-2 text-sm md:text-base font-semibold">
        {
          manuscript.digi_url && (
            <div class="flex">
              <NavLink
                href={manuscript.digi_url}
                class="inline-flex hover:text-brandRed"
              >
                <span>Digital facsimile</span>
                <Icon aria-hidden="true" name="lucide:external-link" />
              </NavLink>
            </div>
          )
        }

        {
          manuscript.catalog_url && (
            <div class="flex">
              <NavLink
                href={manuscript.catalog_url}
                class="inline-flex hover:text-brandRed"
              >
                <span>Catalog entry</span>
                <Icon aria-hidden="true" name="lucide:external-link" />
              </NavLink>
            </div>
          )
        }
      </div>
    </article>
    <div class="my-10 flex p-5 w-3/4 mx-auto justify-between">
      {
        manuscript.id > 1 ? (
          <NavLink
            href={`/manuscripts/jad_manuscript__${parseInt(manuscript.jad_id.split("__")[1]) - 1}`}
          >
            <Icon class="size-20" name="lucide:circle-arrow-left" />
          </NavLink>
        ) : (
          ""
        )
      }

      <NavLink
        href={`/manuscripts/jad_manuscript__${parseInt(manuscript.jad_id.split("__")[1]) + 1}`}
      >
        <Icon class="size-20" name="lucide:circle-arrow-right" />
      </NavLink>
    </div>
  </div>
</PageLayout>
