---
import PageLayout from "../layouts/page-layout.astro";

import TableHead from "../components/table-head.astro";
---

<PageLayout title="Works">
  <TableHead title="Works" />

  <script>
    import { TabulatorFull as Tabulator } from "tabulator-tables";
    // import "tabulator-tables/dist/css/tabulator_bootstrap5.min.css";
    // import "tabulator-tables/dist/css/tabulator_simple.min.css";
    import "tabulator-tables/dist/css/tabulator_semanticui.min.css";
    // import "tabulator-tables/dist/css/tabulator_bulma.min.css";
    // import "tabulator-tables/dist/css/tabulator_materialize.min.css";
    import data from "../content/data/works.json";
    import {
      jsonpathLookup,
      jsonpathsDateRanges,
      jsonpathDistinctLookup,
      dateRangeFilter,
    } from "../lib/tabulator-utils.js";
    import { withBasePath } from "../lib/withBasePath";

    var tabledata = [...Object.values(data)];

    var table = new Tabulator("#tabulator-table", {
      headerFilterLiveFilterDelay: 600,
      height: 900,
      data: tabledata,
      layout: "fitColumns",
      responsiveLayout: "collapse",
      rowHeader: {
        formatter: "responsiveCollapse",
        width: 30,
        minWidth: 30,
        hozAlign: "center",
        resizable: false,
        headerSort: false,
      },
      columns: [
        {
          title: "Title",
          resizable: true,
          field: "name",
          minWidth: 200,
          headerFilter: "input",
        },
        {
          title: "Author",
          resizable: true,
          field: "author",
          minWidth: 200,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].name",
            separator: "; ",
          },
          headerFilter: "input",
        },
        {
          title: "Genre",
          resizable: true,
          field: "genre.value",
          minWidth: 200,
          headerFilter: "input",
          formatter: "textarea",
        },

        {
          title: "Manuscripts",
          resizable: true,
          field: "manuscripts",
          minWidth: 200,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].value",
            separator: "; ",
          },
          headerFilter: "input",
        },
        {
          title: "Passages",
          resizable: true,
          field: "related__passages",
          minWidth: 200,
          mutator: function (value) {
            if (!value || !Array.isArray(value)) {
              return ""; // Handle cases where the field is empty or not an array
            }

            // Extract just the number from each 'jad_id' and join it with a separator
            return value
              .map((item) => {
                const match = item.jad_id.match(/__([0-9]+)$/); // Match the number after "__"
                return match ? match[1] : ""; // Return the matched number or an empty string
              })
              .filter((id) => id) // Remove empty values
              .join(", "); // Join the extracted IDs with a comma
          },
          headerFilter: "input",
        },
        {
          title: "Context",
          resizable: true,
          field: "institutional_context",
          minWidth: 200,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].name",
            separator: "; ",
          },
          headerFilter: "input",
        },
        {
          title: "Date",
          resizable: true,
          field: "written_date",
          minWidth: 200,
          headerFilter: "input",
        },
      ],
    });

    //trigger download of data.csv file
    document
      .getElementById("download-csv")!
      .addEventListener("click", function () {
        table.download("csv", "data.csv");
      });

    //trigger download of data.json file
    document
      .getElementById("download-json")!
      .addEventListener("click", function () {
        table.download("json", "data.json");
      });

    //trigger download of data.html file
    document
      .getElementById("download-html")!
      .addEventListener("click", function () {
        table.download("html", "data.html", { style: true });
      });

    // event listeners set:
    // href to the entry detail view page
    table.on("rowClick", function (e, row) {
      var data = row.getData();
      var url = withBasePath(`/works/${data["jad_id"]}`);
      window.open(url, "_self");
    });
    table.on("dataLoaded", function (data) {
      var el = document.getElementById("counter1");
      if (el) {
        el.innerHTML = `${data.length}`;
      }
      var el = document.getElementById("counter2");
      if (el) {
        el.innerHTML = `${data.length}`;
      }
    });

    table.on("dataFiltered", function (filters, data) {
      var el = document.getElementById("counter1");
      if (el) {
        el.innerHTML = `${data.length}`;
      }
    });
  </script>
</PageLayout>
