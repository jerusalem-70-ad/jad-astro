---
import PageLayout from "../layouts/page-layout.astro";
import TableHead from "../components/table-head.astro";
---

<PageLayout title="Passages">
  <TableHead title="Passages" />

  <script>
    import { TabulatorFull as Tabulator } from "tabulator-tables";
    import "tabulator-tables/dist/css/tabulator_semanticui.min.css";
    import { jsonpathLookup } from "../lib/tabulator-utils.js";
    import { withBasePath } from "../lib/withBasePath";
    import data from "@/content/data/passages.json";

    const dataSet = Object.values(data).map((passage) => {
      return {
        ...passage,
        // get date from nested work object to be used in a separate column
        work_date: passage.work
          .map((work) => work.date.map((datum) => datum.value).join(", "))
          .join("; "),
        // combine work.title with position in work to read in one column
        work_position: passage.work
          .map((work) =>
            passage.position_in_work
              ? `${work.title}: ${passage.position_in_work}`
              : work.title,
          )
          .join("; "),
      };
    });
    console.log(dataSet);

    var tabledata = dataSet;

    var table = new Tabulator("#tabulator-table", {
      headerFilterLiveFilterDelay: 600,
      height: 900,
      data: tabledata,
      layout: "fitColumns",
      responsiveLayout: "collapse",
      rowHeader: {
        formatter: "responsiveCollapse",
        width: 30,
        minWidth: 30,
        hozAlign: "center",
        resizable: false,
        headerSort: false,
      },
      columns: [
        {
          title: "ID",
          resizable: true,
          field: "id",
          width: 80,
          headerFilter: "input",
        },
        {
          title: "Passage",
          resizable: true,
          field: "passage",
          minWidth: 200,
          headerFilter: "input",
        },
        {
          title: "Author",
          resizable: true,
          field: "author_lookup",
          minWidth: 200,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].value",
            separator: "; ",
          },
          headerFilter: "input",
        },
        {
          title: "Work",
          resizable: true,
          field: "work_position",
          minWidth: 200,

          headerFilter: "input",
        },

        {
          title: "Manuscript",
          resizable: true,
          field: "manuscripts",
          minWidth: 200,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].value",
            separator: "\n",
          },
          headerFilter: "input",
          formatter: "textarea",
        },

        {
          title: "Biblical Reference",
          resizable: true,
          field: "biblical_references",
          minWidth: 200,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].value",
            separator: "; ",
          },
          headerFilter: "input",
        },
        {
          title: "Liturgical Reference",
          resizable: true,
          field: "liturgical_references",
          minWidth: 200,
          mutator: jsonpathLookup,
          mutatorParams: {
            path: "$[*].value",
            separator: "; ",
          },
          headerFilter: "input",
        },
        {
          title: "Date",
          resizable: true,
          field: "work_date",
          minWidth: 200,
          headerFilter: "input",
        },
      ],
    });

    //trigger download of data.csv file
    document
      .getElementById("download-csv")!
      .addEventListener("click", function () {
        table.download("csv", "data.csv");
      });

    //trigger download of data.json file
    document
      .getElementById("download-json")!
      .addEventListener("click", function () {
        table.download("json", "data.json");
      });

    //trigger download of data.html file
    document
      .getElementById("download-html")!
      .addEventListener("click", function () {
        table.download("html", "data.html", { style: true });
      });

    // event listeners set:
    // href to the entry detail view page
    table.on("rowClick", function (e, row) {
      var data = row.getData();
      var url = withBasePath(`/passages/${data["jad_id"]}`);
      window.open(url, "_self");
    });
    table.on("dataLoaded", function (data) {
      var el = document.getElementById("counter1");
      if (el) {
        el.innerHTML = `${data.length}`;
      }
      var el = document.getElementById("counter2");
      if (el) {
        el.innerHTML = `${data.length}`;
      }
    });

    table.on("dataFiltered", function (filters, data) {
      var el = document.getElementById("counter1");
      if (el) {
        el.innerHTML = `${data.length}`;
      }
    });
  </script>
</PageLayout>
