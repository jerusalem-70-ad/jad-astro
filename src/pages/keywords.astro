---
import PageLayout from "@/layouts/page-layout.astro";
import TableHead from "@/components/table-head.astro";
const title = "Keywords";
---

<PageLayout title={title}>
  <TableHead title={title} />

  <script>
    import { setupTableActions } from "@/lib/table-actions";
    import { TabulatorFull as Tabulator } from "tabulator-tables";
    import "tabulator-tables/dist/css/tabulator_semanticui.min.css";
    import data from "@/content/data/keywords.json";
    import { JSONPath } from "jsonpath-plus";

    var tabledata = [...Object.values(data)];

    var table = new Tabulator("#tabulator-table", {
      headerFilterLiveFilterDelay: 600,
      height: 900,
      data: tabledata,
      layout: "fitColumns",
      responsiveLayout: "collapse",
      rowHeader: {
        formatter: "responsiveCollapse",
        width: 30,
        minWidth: 30,
        hozAlign: "center",
        resizable: false,
        headerSort: false,
      },
      columns: [
        {
          title: "Name",
          resizable: true,
          field: "name",
          maxWidth: 300,
          headerFilter: "input",
        },
        {
          title: "info",
          resizable: true,
          field: "short_description",
          minWidth: 200,
          maxWidth: 500,
          headerFilter: "input",
          formatter: "textarea",
        },
        {
          title: "Passages",
          field: "related__passages",
          minWidth: 300,
          mutator: (value) => {
            // Apply JSONPath to extract 'passage' and 'id' fields
            const passages = JSONPath({
              path: "$[*]",
              json: value,
            });

            // Flatten and format the extracted data
            return passages
              .flatMap((p: any) => {
                const passage = p.passage ? p.passage.substring(0, 100) : ""; // Truncate passage
                const id = p.id || ""; // Get ID
                const formattedPassage =
                  (id ? ` (${id}) ` : "") +
                  (passage
                    ? `${passage}${p.passage.length > 100 ? "..." : ""}`
                    : ""); // Combine passage and ID
                return formattedPassage;
              })
              .join("\n");
          },
          formatter: "textarea",
          headerFilter: "input",
        },
      ],
    });

    setupTableActions(table, "keywords");
  </script>
</PageLayout>
